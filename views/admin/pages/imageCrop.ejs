<%- include ('../../layouts/adminHeader.ejs') %>

    <style>
        .popup {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 9999;
        }

        .popup-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: rgb(0, 0, 0);
            padding: 20px;
            border-radius: 5px;
        }

        .popup-buttons {
            margin-top: 20px;
            text-align: right;
        }

        .close-popup {
            margin-right: 10px;
        }
    </style>

    <style>
        .pagination {
            display: inline-block;
            max-width: 50%;
            margin: 0 auto;
        }

        .pagination-list {
            list-style-type: none;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: space-around;
            align-items: center;
            margin: 0 auto;
        }

        .page-item {
            display: inline;
        }

        .page-link {
            padding: 0.5em 0.75em;
            text-decoration: none;
            border: 1px solid #dee2e6;
            background-color: #191c24;
            color: #007bff;
        }

        .page-item.active .page-link {
            background-color: #007bff;
            color: #fff;
            border-color: #007bff;
        }
    </style>
    <link rel="stylesheet" href="/lib/cropperjs/dist/cropper.min.css" />

    <div class="main-panel">
        <div class="content-wrapper">
            <div class="page-header">
                <h3 class="page-title">Crop Image</h3>
            </div>
            <div class="row">
                <div class="col-lg-6 col-sm-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">



                            <div class="row flex-column">
                                <div class="d-flex">
                                    <img id="image" width="300px" src="" alt="Product Image">
                                </div>
                                <div class="my-3">
                                    <button id="prevButton">Previous</button>
                                    <button id="nextButton">Next</button>
                                </div>
                                <div class="mt-3">
                                    <button id="cropButton">Crop</button>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-sm-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">



                            <div class="row">

                                <div class="output">
                                    <img id="croppedImage" width="300px" alt="Cropped Image">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <script>

        document.addEventListener('DOMContentLoaded', function () {
            const imageElement = document.getElementById('image');
            const cropButton = document.getElementById('cropButton');
            const croppedImageElement = document.getElementById('croppedImage');
            let cropper;

            // Retrieve imagePaths from the URL query parameter
            const url = window.location.href;
            const params = new URL(url).searchParams;
            const imagePaths = params.get('imagePath').split(',');

            console.log(imagePaths)

            // Load the first image from the imagePaths array
            loadImage(imagePaths[0]);
            croppedImageElement.src = imagePaths[0]


            // Function to load an image into the imageElement
            function loadImage(imagePath) {

                const image = new Image();
                image.onload = function () {
                    imageElement.src = imagePath;
                };
                image.src = imagePath;
            }

            imageElement.addEventListener('click', () => {
                if (!cropper) {
                    cropper = new Cropper(imageElement, {
                        aspectRatio: 1,
                        viewMode: 2,
                    });
                } else {
                    cropper.destroy();
                    cropper = null;
                }
            });

            // Function to handle changing of images
            function changeImage(index) {
                console.log(index)
                if (index >= 0 && index <= imagePaths.length) {
                    cropper.destroy();
                    loadImage(imagePaths[index]);
                }
            }

            // Event listener for previous button
            document.getElementById('prevButton').addEventListener('click', function () {
                changeImage(0);
            });

            // Event listener for next button
            document.getElementById('nextButton').addEventListener('click', function () {
                changeImage(1);
            });

            // Event listener for crop button
            cropButton.addEventListener('click', function () {
                if (cropper) {
                    const croppedCanvas = cropper.getCroppedCanvas();
                    const croppedImage = croppedCanvas.toDataURL();
                    const cropData = cropper.getCropBoxData();
                    croppedImageElement.src = croppedImage;

                    const cropWidth = cropData.width;
                    const cropHeight = cropData.height;
                    const cropX = cropData.left;
                    const cropY = cropData.top;

                    const data = { cropWidth, cropHeight, cropX, cropY, croppedImage }

                    const blob = dataURLToBlob(croppedImage);

                    // Generate a new URL for the Blob object
                    const imageUrl = URL.createObjectURL(blob);

                    // Set the src attribute of the croppedImageElement with the generated URL
                    croppedImageElement.src = imageUrl;

                    // Send the cropped image data to the server or perform further actions
                    // You can use AJAX or other methods to send the data to the server
                    console.log(imageUrl);


                    // $.ajax({
                    //     type:"POST",
                    //     url:"/api/v1/admin/crop-image",
                    //     data,
                    //     success: function (response){
                    //         console.log(response)
                    //     }
                    // })

                    // Send the cropped image to the server or perform further actions
                    // You can use AJAX or other methods to send the cropped image data to the server
                    console.log(croppedImageElement.src);
                }

            });

        });

    </script>


    <script src="/lib/cropperjs/dist/cropper.min.js"></script>



    <%- include ('../../layouts/adminFooter.ejs') %>